// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortalAnuncios.Data;

#nullable disable

namespace PortalAnuncios.Migrations
{
    [DbContext(typeof(PortalAnunciosContext))]
    [Migration("20230404232759_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ModelagemBd.Anuncio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnuncianteId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AnuncianteId");

                    b.ToTable("Anuncios", (string)null);
                });

            modelBuilder.Entity("ModelagemBd.Candidatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnuncioId")
                        .HasColumnType("int");

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Candidaturas", (string)null);
                });

            modelBuilder.Entity("ModelagemBd.CandidaturaHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CandidaturaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDoStatus")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidaturaId");

                    b.ToTable("CandidaturasHistoricos", (string)null);
                });

            modelBuilder.Entity("ModelagemBd.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("ModelagemBd.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("ClientesEnderecos", (string)null);
                });

            modelBuilder.Entity("ModelagemBd.Anuncio", b =>
                {
                    b.HasOne("ModelagemBd.Cliente", "Anunciante")
                        .WithMany("Anuncios")
                        .HasForeignKey("AnuncianteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Anunciante");
                });

            modelBuilder.Entity("ModelagemBd.Candidatura", b =>
                {
                    b.HasOne("ModelagemBd.Anuncio", "Anuncio")
                        .WithMany("Candidaturas")
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ModelagemBd.Cliente", "Candidato")
                        .WithMany()
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ModelagemBd.Cliente", null)
                        .WithMany("Candidaturas")
                        .HasForeignKey("ClienteId");

                    b.Navigation("Anuncio");

                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("ModelagemBd.CandidaturaHistorico", b =>
                {
                    b.HasOne("ModelagemBd.Candidatura", "Candidatura")
                        .WithMany("Historico")
                        .HasForeignKey("CandidaturaId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Candidatura");
                });

            modelBuilder.Entity("ModelagemBd.Endereco", b =>
                {
                    b.HasOne("ModelagemBd.Cliente", "Cliente")
                        .WithMany("Enderecos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ModelagemBd.Anuncio", b =>
                {
                    b.Navigation("Candidaturas");
                });

            modelBuilder.Entity("ModelagemBd.Candidatura", b =>
                {
                    b.Navigation("Historico");
                });

            modelBuilder.Entity("ModelagemBd.Cliente", b =>
                {
                    b.Navigation("Anuncios");

                    b.Navigation("Candidaturas");

                    b.Navigation("Enderecos");
                });
#pragma warning restore 612, 618
        }
    }
}
